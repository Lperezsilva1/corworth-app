name: tests

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]

jobs:
  ci:
    runs-on: ubuntu-latest
    environment: Testing

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: laravel
          MYSQL_USER: laravel
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: root
        ports: ['3306:3306']
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot --silent"
          --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3' # cambia a '8.4' si tu proyecto lo requiere
          tools: composer:v2
          extensions: mbstring, pdo_mysql, bcmath, intl
          coverage: none

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'         # tu config original
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm i

      - name: Add Flux Credentials Loaded From ENV
        run: composer config http-basic.composer.fluxui.dev "${{ secrets.FLUX_USERNAME }}" "${{ secrets.FLUX_LICENSE_KEY }}"

      - name: Install PHP Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy Environment Files
        run: |
          cp .env.example .env
          cp .env.example .env.testing
          php -r "
            \$e = file_get_contents('.env.testing');
            // modo testing y drivers en memoria para acelerar
            if (strpos(\$e, 'APP_ENV=') === false) { \$e .= \"\nAPP_ENV=testing\n\"; }
            else { \$e = preg_replace('/^APP_ENV=.*/m','APP_ENV=testing', \$e); }
            \$e = preg_replace('/^CACHE_DRIVER=.*/m','CACHE_DRIVER=array', \$e);
            \$e = preg_replace('/^SESSION_DRIVER=.*/m','SESSION_DRIVER=array', \$e);
            // apuntar a MySQL del servicio
            \$e = preg_replace('/^DB_CONNECTION=.*/m','DB_CONNECTION=mysql', \$e);
            \$e = preg_replace('/^DB_HOST=.*/m','DB_HOST=127.0.0.1', \$e);
            \$e = preg_replace('/^DB_PORT=.*/m','DB_PORT=3306', \$e);
            \$e = preg_replace('/^DB_DATABASE=.*/m','DB_DATABASE=laravel', \$e);
            \$e = preg_replace('/^DB_USERNAME=.*/m','DB_USERNAME=laravel', \$e);
            if (strpos(\$e, 'DB_PASSWORD=') === false) { \$e .= \"\nDB_PASSWORD=secret\n\"; }
            else { \$e = preg_replace('/^DB_PASSWORD=.*/m','DB_PASSWORD=secret', \$e); }
            file_put_contents('.env.testing', \$e);
          "

      - name: Generate APP_KEY (testing)
        run: php artisan key:generate --env=testing

      - name: Install MySQL client (for health checks)
        run: sudo apt-get update && sudo apt-get install -y mysql-client

      - name: Wait for MySQL
        run: |
          for i in {1..40}; do
            mysqladmin ping -h 127.0.0.1 -u laravel -psecret --silent && break
            sleep 2
          done

      - name: Build Assets
        run: npm run build

      - name: Run Migrations (testing)
        run: php artisan migrate --env=testing --force
        # Si dependes de datos base en tests, usa --seed:
        # run: php artisan migrate --env=testing --force --seed

      - name: Run Tests
        run: ./vendor/bin/pest -p
